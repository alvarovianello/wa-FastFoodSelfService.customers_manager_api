name: Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  execute-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the solution
        run: dotnet build --no-restore --configuration Release

      - name: Run Tests and Generate Coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" \
            --results-directory="./TestResults" \
            /p:CoverletOutput="./TestResults/coverage" \
            /p:CoverletOutputFormat="cobertura"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install XML Parser
        run: npm install xml2js

      - name: Parse Coverage and Generate Summary
        run: |
          node <<EOF
          const fs = require('fs');
          const parser = require('xml2js').parseString;

          const coverageFile = './TestResults/coverage.cobertura.xml';
          const coverageXML = fs.readFileSync(coverageFile, 'utf8');

          parser(coverageXML, (err, result) => {
            if (err) {
              throw err;
            }

            const metrics = result.coverage.$;
            const coveredLines = parseInt(metrics.coveredlines, 10);
            const totalLines = parseInt(metrics.totallines, 10);
            const coveragePercent = ((coveredLines / totalLines) * 100).toFixed(2);

            const summary = ` - **Code Coverage**: ${coveragePercent}% - **Lines Covered**: ${coveredLines} - **Total Lines**: ${totalLines}`;

            console.log(summary);

            // Save the summary to the GitHub Actions job summary
            fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY, summary);
          });
          EOF
