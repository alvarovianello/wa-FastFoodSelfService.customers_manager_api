name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Build the project
        run: dotnet build

      - name: Run Tests and Generate Coverage
        run: |
          dotnet test --collect:"XPlat Code Coverage" \
            --results-directory="./TestResults" \
            --logger:"trx" \
            /p:CoverletOutput="./TestResults/coverage.cobertura.xml" \
            /p:CoverletOutputFormat="cobertura"
          echo "Searching for the coverage file..."
          COVERAGE_PATH=$(find ./TestResults -name "coverage.cobertura.xml" | head -n 1)
          if [ -z "$COVERAGE_PATH" ]; then
            echo "Error: Coverage file not found!"
            exit 1
          else
            echo "Coverage file found at: $COVERAGE_PATH"
            echo "COVERAGE_PATH=$COVERAGE_PATH" >> $GITHUB_ENV
          fi

      - name: SonarCloud Begin Analysis
        run: |
          dotnet sonarscanner begin \
            /k:"alvarovianello_wa-FastFoodSelfService.customers_manager_api" \
            /o:"alvarovianello" \
            /d:sonar.token=${{ secrets.SONAR_TOKEN }} \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="${{ env.COVERAGE_PATH }}"

      - name: SonarCloud End Analysis
        run: dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}
