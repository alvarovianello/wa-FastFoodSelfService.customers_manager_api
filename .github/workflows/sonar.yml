name: Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  execute-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.302

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: |
          dotnet test --collect:"XPlat Code Coverage" \
            --results-directory="./TestResults" \
            --logger:"trx" \
            /p:CoverletOutput="./TestResults/coverage.cobertura.xml" \
            /p:CoverletOutputFormat="cobertura"
          echo "Searching for the coverage file..."
          COVERAGE_PATH=$(find ./TestResults -name "coverage.cobertura.xml" | head -n 1)
          TRX_PATH=$(find ./TestResults -name "*.trx" | head -n 1)

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Tests
          path: $TRX_PATH
          reporter: dotnet-trx

      - name: Restore local tools
        run: dotnet tool restore

      - name: Generate coverage report
        run: dotnet reportgenerator -reports:$COVERAGE_PATH -targetdir:./coverage -reporttypes:MarkdownSummary
          
      - name: Create check with coverage report
        uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Code coverage
          conclusion: ${{ job.status }}
          output: '{"summary":"Code coverage"}'
          output_text_description_file: coverage/Summary.md
  
