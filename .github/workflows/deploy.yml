name: CI/CD for Customers Manager API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGION_DEFAULT: "us-east-1"
  CLUSTER_NAME: "EKS-FastFood"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./Api/Api.csproj

      - name: Build
        run: dotnet build ./Api/Api.csproj --configuration Release

      - name: Run Tests
        run: dotnet test ./Api/Api.csproj --configuration Release

  deploy:
    name: Deploy AWS Academy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}
          terraform_version: 1.3.0

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve
      
      - name: Update Kube Config
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.REGION_DEFAULT }}

      - name: Apply Kubernetes configurations
        run: |
          kubectl apply -f kubernetes/wa-customersmanagerapi-configmap.yaml
          kubectl apply -f kubernetes/wa-customersmanagerapi-deployment.yaml
          kubectl apply -f kubernetes/wa-customersmanagerapi-hpa.yaml
          kubectl apply -f kubernetes/wa-customersmanagerapi-pvc.yaml
          kubectl apply -f kubernetes/wa-customersmanagerapi-service.yaml
